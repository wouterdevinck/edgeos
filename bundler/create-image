#!/bin/bash

set -e
set -o pipefail

DOCKER_COMPOSE_FILE="docker-compose.yml"
MANIFEST_FILE="manifest.json"
IMAGE_NAME="disk.img"

WORKDIR="tmp"

# Create working directory
rm -rf $WORKDIR
mkdir -p $WORKDIR

# Copy manifest and compose files to workdir
cp $DOCKER_COMPOSE_FILE $WORKDIR
cp $MANIFEST_FILE $WORKDIR

# Go to workdir
pushd $WORKDIR > /dev/null

# Read/edit manifest file
source process-manifest $MANIFEST_FILE

# Name resulting file
DISKNAME_COMPRESSED="$APP_NAME-$APP_VERSION.img.gz"

# Info message
echo "Creating disk image $DISKNAME_COMPRESSED for $APP_NAME version $APP_VERSION"

# Get EdgeOS release, containing boot partitions and rootfs image
get-os $EDGEOS_VERSION

# Create partition with manifest and compose files
echo "  Creating manifest partition"
mksquashfs $MANIFEST_FILE $DOCKER_COMPOSE_FILE manifest.squashfs > /dev/null 2>&1

# Run genimage
echo "  Creating image"
BUILD_DIR=$(pwd) fakeroot genimage.sh -c /data/rpi4-genimage.cfg > /dev/null 2>&1

# Compress image
echo "  Compressing image"
gzip -c $IMAGE_NAME > $DISKNAME_COMPRESSED 2> /dev/null

# Copy output
popd > /dev/null
cp $WORKDIR/$DISKNAME_COMPRESSED .

# Clean up
rm -rf $WORKDIR
echo "  Done."
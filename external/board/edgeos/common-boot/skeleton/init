#!/bin/sh
set -e

mount -t proc proc /proc
mount -t sysfs sysfs /sys
mount -t devtmpfs devtmpfs /dev

fail_shell() {
  echo "$@"
  exec sh
}

exec 0</dev/console
exec 1>/dev/console
exec 2>/dev/console

# Run platform specific init.
source /usr/sbin/platform-init.sh

# Calculate the names of all relevant partitions.
BOOTDEV="$PREFIX$BOOTPART"
ROOTFSDEV="$PREFIX$((SLOT+4))"
MANIFESTDEV="$PREFIX$((SLOT+6))"
CONFIGDEV="${PREFIX}9"
LOGSDEV="${PREFIX}10"
DOCKERDEV="${PREFIX}11"

# Attempt to resize DOCKER partition to fill the rest of the disk.
if growpart $DEV 4 > /dev/null 2>&1; then
  if ! growpart $DEV 11 > /dev/null 2>&1; then
    fail_shell "Failed to grow the DOCKER partition, dropping to a shell"
  fi
  partprobe $DEV > /dev/null 2>&1
  if ! resize2fs $DOCKERDEV > /dev/null 2>&1; then
    fail_shell "Failed to resize DOCKER file system, dropping to a shell"
  fi
fi

# Check & repair file systems.
fsck -p $BOOTDEV > /dev/null 2>&1 || true
fsck -p $CONFIGDEV > /dev/null 2>&1 || true
fsck -p $LOGSDEV > /dev/null 2>&1 || true
fsck -p $DOCKERDEV > /dev/null 2>&1 || true

# Mount the read-only SquashFS ROOT_A or ROOT_B root file system partition.
if ! mount $ROOTFSDEV /mnt; then
  fail_shell "Failed to mount rootfs, dropping to a shell"
fi

# Mount the MANIFEST_A or MANIFEST_B read-only SquashFS partition with manifest and docker-compose file.
if ! mount $MANIFESTDEV /mnt/boot/manifest; then
  fail_shell "Failed to mount MANIFEST, dropping to a shell"
fi

# Mount the CONFIG ext4 partition as an overlay on /etc.
if ! mount $CONFIGDEV /mnt/boot/config; then
  fail_shell "Failed to mount CONFIG, dropping to a shell"
fi
mkdir -p /mnt/boot/config/upper
mkdir -p /mnt/boot/config/work
if ! mount -t overlay overlay -o lowerdir=/mnt/etc,upperdir=/mnt/boot/config/upper,workdir=/mnt/boot/config/work /mnt/etc; then
  fail_shell "Failed to mount CONFIG overlayfs, dropping to a shell"
fi

# Mount the LOGS ext4 partition.
if ! mount $LOGSDEV /mnt/var/log; then
  fail_shell "Failed to mount LOGS, dropping to a shell"
fi

# Mount the DOCKER ext4 partition.
if ! mount $DOCKERDEV /mnt/var/lib/docker; then
  fail_shell "Failed to mount DOCKER, dropping to a shell"
fi

cat << "EOF"

  ______    _             ____   _____ 
 |  ____|  | |           / __ \ / ____|
 | |__   __| | __ _  ___| |  | | (___  
 |  __| / _` |/ _` |/ _ \ |  | |\___ \ 
 | |___| (_| | (_| |  __/ |__| |____) |
 |______\__,_|\__, |\___|\____/|_____/ 
               __/ |                   
              |___/                    

EOF

mount --move /sys /mnt/sys
mount --move /proc /mnt/proc
mount --move /dev /mnt/dev

exec switch_root -c /dev/console /mnt /sbin/init